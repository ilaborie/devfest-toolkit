[
  {
    "op": "test",
    "path": "/key",
    "value": "le_design_de_l_erreur"
  },
  {
    "op": "replace",
    "path": "/speakers",
    "value": ["francois_teychene"]
  },
  {
    "op": "replace",
    "path": "/description",
    "value": "Nos systèmes sont designés de manière optimiste, de la gestion technique des erreurs à la modélisation de nos interfaces.  \nQue ce soient les codes d'erreurs, les exceptions ou les modélisations plus avancées, elles servent pour arrêter un traitement et _potentiellement_ afficher un message d'information à un utilisateur.\n\nMais avec les architectures microservices, la distribution des traitements ou une simple volonté de résilience, la gestion des erreurs est devenue un enjeu important de tous les systèmes afin qu’ils restent accessibles de tous, tout le temps tout en maintenant le système dans un état cohérent.\n\nQue fait-on lorsqu’une erreur intervient ? Peut-on compenser voire gérer l’erreur depuis le système pour l’utilisateur ?\n\nLa réponse à ces questions se trouve autant dans la définition du produit que dans le choix technique.\nUn outil bien conçu est un outil intelligent qui peut faire les bons choix au bon moment pour l'utilisateur. Et si on apprenait ensemble à concevoir nos erreurs ?"
  }
]
